# 테트로미노
shape_delta_list = [
    [[0, 0], [0, 1], [0, 2], [0, 3]],  # 일자 가로
    [[0, 0], [1, 0], [2, 0], [3, 0]],  # 일자 세로
    [[0, 0], [0, 1], [1, 0], [1, 1]],  # 정사각형
    [[0, 0], [1, 0], [2, 0], [2, 1]],  # 'ㄴ'자 1
    [[0, 0], [1, 0], [2, 0], [2, -1]],  # 'ㄴ'자 1 대칭
    [[0, 0], [0, 1], [0, 2], [1, 0]],  # 'ㄴ'자 2
    [[0, 0], [0, 1], [0, 2], [-1, 0]],  # 'ㄴ'자 2 대칭
    [[0, 0], [0, 1], [1, 1], [2, 1]],  # 'ㄴ'자 3
    [[0, 0], [0, 1], [1, 0], [2, 0]], # 'ㄴ'자 3 대칭
    [[0, 0], [0, 1], [0, 2], [-1, 2]],  # 'ㄴ'자 4
    [[0, 0], [0, 1], [0, 2], [1, 2]],  # 'ㄴ'자 4 대칭
    [[0, 0], [1, 0], [1, 1], [2, 1]],  # 'Z'자 세로
    [[0, 0], [1, 0], [1, -1], [2, -1]],  # 'Z'자 세로 대칭
    [[0, 0], [0, 1], [-1, 1], [-1, 2]],  # 'Z'자 가로
    [[0, 0], [0, 1], [1, 1], [1, 2]], # 'Z'자 가로 대칭
    [[0, 0], [0, 1], [0, 2], [1, 1]],  # 'ㅗ'자 1
    [[0, 0], [0, 1], [0, 2], [-1, 1]],  # 'ㅗ'자 2
    [[0, 0], [1, 0], [2, 0], [1, 1]],  # 'ㅗ'자 3
    [[0, 0], [1, 0], [2, 0], [1, -1]],  # 'ㅗ'자 4
]

N, M = map(int, input().split())
arr = [list(map(int, input().split())) for _ in range(N)]

max_sum = 0
for i in range(N):
    for j in range(M):
        for delta in shape_delta_list:
            sum_nums = 0
            for di, dj in delta:
                ni, nj = i + di, j + dj
                if 0 <= ni < N and 0 <= nj < M:
                    sum_nums += arr[ni][nj]
            if sum_nums > max_sum:
                max_sum = sum_nums
print(max_sum)